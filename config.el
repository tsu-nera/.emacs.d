;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

;; doom specific config
;; „ÅÇ„Å®„Åß„Éó„É©„Ç§„Éô„Éº„Éà„Å™ÂÆ£Ë®ÄÊñπÊ≥ï„ÅÜ„Åó„Çâ„Åπ„Çã.
;; (setq user-full-name "John Doe"
;;       user-mail-address "john@doe.com")
;;
;; „Å©„ÅÜ„ÇÇ„Éï„Ç©„É≥„Éà„ÅåÂ•áÊï∞„Å†„Å®org-table„ÅÆË°®Á§∫„ÅåÂ¥©„Çå„Çã.
;; Source Han Code JP„Å†„Å®„Åù„ÇÇ„Åù„ÇÇorg-table„ÅÆË°®Á§∫„ÅåÂ¥©„Çå„Çã.
;; terminal„Å†„Å®Â§ß‰∏àÂ§´„Å™Ê®°Êßò.„Åù„ÇÇ„Åù„ÇÇTerminal„ÅØ„Åì„ÅÆË®≠ÂÆö„Åß„ÅØ„Å™„Åè„Å¶Terminal Emulator„ÅÆË®≠ÂÆö„Åå„Åç„Åè.
(setq doom-font (font-spec :family "Source Han Code JP" :size 12 ))

(setq doom-theme 'doom-molokai)
(doom-themes-org-config)

;; general config
(set-language-environment "Japanese")
(prefer-coding-system 'utf-8)
(set-default 'buffer-filecoding-system 'utf-8)

(setq display-line-numbers-type t) ; Ë°åÁï™Âè∑Ë°®Á§∫
(setq confirm-kill-emacs nil) ; ÁµÇ‰∫ÜÊôÇ„ÅÆÁ¢∫Ë™ç„ÅØ„Åó„Å™„ÅÑ.

;; „Éï„É´„Çπ„ÇØ„É™„Éº„É≥„ÅßEmacsËµ∑Âãï
;; „Éñ„É©„Ç¶„Ç∂„Å®‰∏¶„Åπ„Å¶Ë°®Á§∫„Åô„Çã„Åì„Å®„ÅåÂ§ö„Åè„Å™„Å£„Åü„ÅÆ„Åß„ÅÑ„Å£„Åü„Çì„Éû„Çπ„ÇØ
;; (add-to-list 'initial-frame-alist '(fullscreen . maximized))

;; memo:
;; use-package! „ÅØ:defer, :hook, :commands, or :after„ÅåÁúÅÁï•„Åï„Çå„Çã„Å®Ëµ∑ÂãïÊôÇ„Å´load„Åï„Çå„Çã.
;; after! „ÅØpackage„Ååload„Åï„Çå„Åü„Å®„Åç„Å´Ë©ï‰æ°„Åï„Çå„Çã.
;; add-hook! „ÅØmodeÊúâÂäπÂåñ„ÅÆ„Å®„Åç. setq-hook!„ÅØequivalent.
;; „Å©„Çå„Çí‰Ωø„ÅÜ„Åã„ÅÆÊ≠£Ëß£„ÅØ„Å™„ÅÑ„Åå„Åô„Åπ„Å¶use-package!„Å†„Å®Ëµ∑Âãï„ÅåÈÅÖ„Åè„Å™„Çã„ÅÆ„Åß
;; Â†¥Âêà„Å´„Çà„Å£„Å¶„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åõ„ÇàÔºå„Å®„ÅÆ„Åì„Å®.
;; https://github.com/hlissner/doom-emacs/blob/develop/docs/getting_started.org#configuring-packages

(use-package! fcitx
  :config
  (setq fcitx-remote-command "fcitx5-remote")
  (fcitx-aggressive-setup)
  ;; Linux„Å™„Çâ t „ÅåÊé®Â•®„Åï„Çå„Çã„ÇÇ„ÅÆ„ÅÆ„ÄÅfcitx5„Å´„ÅØÊú™ÂØæÂøú„Å™„Åü„ÇÅ„Åì„Åì„ÅØnil
  (setq fcitx-use-dbus nil))

;; migemo
(use-package! migemo
  :config
  (setq migemo-command "cmigemo")
  (setq migemo-options '("-q" "--emacs" "-i" "\a"))
  (setq migemo-dictionary "/usr/share/migemo/utf-8/migemo-dict")
  (setq migemo-user-dictionary nil)
  (setq migemo-regex-dictionary nil)
  (setq migemo-coding-system 'utf-8-unix)
  (migemo-init))

;; less„Åß„ÅÆ„Éï„Ç°„Ç§„É´Èñ≤Ë¶ß„Å´Êìç‰ΩúÊÄß„Çí‰ºº„Åõ„Çãmode.
;; view-mode„ÅØemacsÂÜÖËîµ. C-x C-r„Åßread-only-mode„Åß„Éï„Ç°„Ç§„É´„Ç™„Éº„Éó„É≥
;; doom emacs„Å†„Å®„ÄÄC-c t r „Åß„ÄÄread-only-mode„ÅåËµ∑Âãï„Åô„Çã.
(add-hook! view-mode
  (setq view-read-only t)
  (define-key ctl-x-map "\C-q" 'view-mode) ;; assinged C-x C-q.

  ;; less „Å£„Åº„Åè.
  (define-key view-mode-map (kbd "p") 'view-scroll-line-backward)
  (define-key view-mode-map (kbd "n") 'view-scroll-line-forward)
  ;; default„ÅÆe„Åß„ÇÇ„ÅÑ„ÅÑ„Åë„Å©ÔºåmuleÊôÇ‰ª£„Å´v„Å´bind„Åï„Çå„Å¶„Åü„ÅÆ„Åß, emacs„Åß„ÇÇv„Å´bind„Åó„Å¶„Åä„Åè.
  (define-key view-mode-map (kbd "v") 'read-only-mode))

;; org-mode
;; https://github.com/hlissner/doom-emacs/blob/develop/modules/lang/org/README.org
;; https://github.com/tsu-nera/dotfiles/blob/master/.emacs.d/inits/50_org-mode.org

;; „Çπ„Éû„Éõ„Å®„ÅÆÂÖ±Êúâ„ÅÆ„Åü„ÇÅ, github„Çíclone„Åó„Åü„ÇÇ„ÅÆ„ÇíDropbox„Å´ÁΩÆ„ÅÑ„Å¶$HOME„Å´symlink„Åó„Å¶„ÅÑ„Çã.
(after! org
  (setq org-directory "~/keido")
  (setq org-default-notes-file "gtd/gtd_projects.org")

  (setq org-return-follows-link t) ;; Enter„Åß„É™„É≥„ÇØÂÖà„Å∏„Ç∏„É£„É≥„Éó
  (setq org-use-speed-commands t)  ;; bullet„Å´„Ç´„Éº„ÇΩ„É´„Åå„ÅÇ„Çã„Å®È´òÈÄüÁßªÂãï
  (setq org-hide-emphasis-markers t) ;; * „ÇíÊ∂à„Åó„Å¶Ë°®Á§∫.

  ;; M-RET„ÅÆÊåôÂãï„ÅÆË™øÊï¥
  ;; t„Å†„Å®subtree„ÅÆÊúÄÁµÇË°å„Å´heading„ÇíÊåøÂÖ•, nil„Å†„Å®current point„Å´ÊåøÂÖ•
  ;; „Å™„ÅäÔºåC-RET„Å†„Å®subtree„ÅÆÊúÄÁµÇË°å„Å´ÊåøÂÖ•„Åï„Çå, C-S-RET„Å†„Å®ÊâãÂâç„Å´ÊåøÂÖ•„Åï„Çå„Çã.
  (setq org-insert-heading-respect-content nil)

  (setq org-startup-indented t)
  (setq org-indent-mode-turns-on-hiding-stars nil)

  (setq org-startup-folded 'show2levels);; Ë¶ãÂá∫„Åó„ÅÆÈöéÂ±§ÊåáÂÆö
  (setq org-startup-truncated nil) ;; Èï∑„ÅÑÊñá„ÅØÊäò„ÇäËøî„Åô.

  ;; org-babel„ÅÆ„ÇΩ„Éº„Çπ„Çí„Ç≠„É¨„Ç§„Å´Ë°®Á§∫.
  (setq org-src-fontify-natively t)
  (setq org-fontify-whole-heading-line t)

  ;; electric-indent„ÅØorg-mode„ÅßË™§‰ΩúÂãï„ÅÆÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„Åì„Å®„ÅÆ„Åì„Å®
  ;; „Åü„Åæ„Å´„ÅÑ„Åç„Å™„Çäorg-mode„ÅÆtreeÊßãÈÄ†„ÅåÂ£ä„Çå„Çã„Åã„ÇâÔºå„Å®„Çä„ÅÇ„Åà„ÅöË®≠ÂÆö„Åó„Å¶„Åä„Åè.
  ;; „Åì„ÅÆË®≠ÂÆö„ÅÆÂäπÊûú„Åå‰ª•‰∏ã„ÅÆË®ò‰∫ã„Åßgif„Åß„ÅÇ„Çã.
  ;; https://www.philnewton.net/blog/electric-indent-with-org-mode/
  (add-hook! org-mode (electric-indent-local-mode -1))

  ;; org-agenda
  (setq org-refile-targets '((org-agenda-files :maxlevel . 3)))
  (setq org-agenda-time-leading-zero t) ;; ÊôÇÈñìË°®Á§∫„Åå 1 Ê°Å„ÅÆÊôÇ, 0 „Çí„Å§„Åë„Çã
  (setq calendar-holidays nil) ;; Á•ùÊó•„ÇíÂà©Áî®„Åó„Å™„ÅÑ.
  (setq org-log-done 'time);; Â§âÊõ¥ÊôÇ„ÅÆÁµÇ‰∫ÜÊôÇÂàªË®òÈå≤.

  ;; „Çπ„Ç±„Ç∏„É•„Éº„É´„ÇÑ„Éá„ÉÉ„Éâ„É©„Ç§„É≥„Ç¢„Ç§„ÉÜ„É†„ÅØ DONE „Å´„Å™„Å£„Å¶„ÅÑ„Çå„Å∞Ë°®Á§∫„Åô„Çã
  (setq org-agenda-skip-deadline-if-done nil)
  (setq org-agenda-skip-scheduled-if-done nil)

  (setq org-agenda-include-inactive-timestamps t) ;; default „Åß logbook „ÇíË°®Á§∫
  (setq org-agenda-start-with-log-mode t) ;; ;; default „Åß ÊôÇÈñì„ÇíË°®Á§∫

  ;; org-agenda speedup tips
  ;; https://orgmode.org/worg/agenda-optimization.html

  ;; ‰Ωï„Åß„ÇÇ„Åã„Çì„Åß„ÇÇagenda„Åô„Çã„Å®ÊÄù„ÅÑ„ÅÆ„ÅßÂé≥ÈÅ∏.
  (setq org-agenda-files '("~/keido/zk/gtd/gtd_projects.org"
                           "~/keido/zk/logs/daily"))

  ;; ÊúüÈñì„ÇíÈôêÂÆö
  (setq org-agenda-span 30)
                                        ; Inhibit the dimming of blocked tasks:
  (setq org-agenda-dim-blocked-tasks nil)
  ;; Inhibit agenda files startup options:
  (setq org-agenda-inhibit-startup nil)
  ;; Disable tag inheritance in agenda:
  (setq org-agenda-use-tag-inheritance nil)

  ;; org-capture
  ;; ‰Ωø„ÅÑ„Åì„Å™„Åõ„Å¶„Å™„ÅÑ„Å™...
  (setq org-capture-templates
        '(("i" "Inbox" entry (file "~/keido/inbox/inbox.org") "* %T %?\n")
          ;;        ("j" "Journal" entry (file+headline "~/gtd/journal.org" "Journal")
                                        ;         "* %?\nEntered on %U\n %i\n %a")
          ;;        ("d" "Daily Log" entry (function org-journal-find-location)
          ;;                               "* %(format-time-string org-journal-time-format)%i%?")
          ))

  ;; org-babel
  ;; Ë©ï‰æ°„Åß„ÅÑ„Å°„ÅÑ„Å°Ë≥™Âïè„Åï„Çå„Å™„ÅÑ„Çà„ÅÜ„Å´.
  (setq org-confirm-babel-evaluate nil)
  ;; org-babel „Åß ÂÆüË°å„Åó„ÅüË®ÄË™û„ÇíÊõ∏„Åè. „Éá„Éï„Ç©„É´„Éà„Åß„ÅØ emacs-lisp „Å†„Åë.
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((lisp . t)
     (shell . t)))
  )

;; org-mode„Åßtimestamp„ÅÆ„Åø„ÇíÊåøÂÖ•„Åô„Çã„Ç´„Çπ„Çø„É†Èñ¢Êï∞(hh:mm)
(after! org
  (defun my/insert-timestamp ()
    "Insert time stamp."
    (interactive)
    (insert (format-time-string "%H:%M")))
 (map! :map org-mode-map "C-c C-." #'my/insert-timestamp))

;; +pretty(org-superstar-mode)Èñ¢ÈÄ£
;;; Titles and Sections
;; hide #+TITLE:
;; (setq org-hidden-keywords '(title))
;; set basic title font
;; (set-face-attribute 'org-level-8 nil :weight 'bold :inherit 'default)
;; Low levels are unimportant => no scaling
;; (set-face-attribute 'org-level-7 nil :inherit 'org-level-8)
;; (set-face-attribute 'org-level-6 nil :inherit 'org-level-8)
;; (set-face-attribute 'org-level-5 nil :inherit 'org-level-8)
;; (set-face-attribute 'org-level-4 nil :inherit 'org-level-8)
;; Top ones get scaled the same as in LaTeX (\large, \Large, \LARGE)
;; (set-face-attribute 'org-level-3 nil :inherit 'org-level-8 :height 1.2) ;\large
;; (set-face-attribute 'org-level-2 nil :inherit 'org-level-8 :height 1.44) ;\Large
;; (set-face-attribute 'org-level-1 nil :inherit 'org-level-8 :height 1.728) ;\LARGE
;; Only use the first 4 styles and do not cycle.
(setq org-cycle-level-faces nil)
(setq org-n-level-faces 4)
;; Document Title, (\huge)
;; (set-face-attribute 'org-document-title nil
;;                    :height 2.074
;;                    :foreground 'unspecified
;;                    :inherit 'org-level-8)

;; (with-eval-after-load 'org-superstar
;;  (set-face-attribute 'org-superstar-item nil :height 1.2)
;;  (set-face-attribute 'org-superstar-header-bullet nil :height 1.2)
;;  (set-face-attribute 'org-superstar-leading nil :height 1.3))
;; Set different bullets, with one getting a terminal fallback.
(setq org-superstar-headline-bullets-list
      '("‚óâ" ("üûõ" ?‚óà) "‚óã" "‚ñ∑"))
;; (setq org-superstar-special-todo-items t)

;; Stop cycling bullets to emphasize hierarchy of headlines.
(setq org-superstar-cycle-headline-bullets nil)
;; Hide away leading stars on terminal.
;; (setq org-superstar-leading-fallback ?\s)
(setq inhibit-compacting-font-caches t)

;; org-roam
(setq org-roam-directory (file-truename "~/keido/zk"))
(use-package! org-roam
  :after org
  :init
  (setq org-roam-v2-ack t)
  (map!
        :leader
        :prefix ("r" . "org-roam")
        "f" #'org-roam-node-find
        "i" #'org-roam-node-insert
        "l" #'org-roam-buffer-toggle
        "t" #'org-roam-tag-add
        "T" #'org-roam-tag-remove
        "a" #'org-roam-alias-add
        "A" #'org-roam-alias-remove
        "r" #'org-roam-ref-add
        "R" #'org-roam-ref-remove
        "o" #'org-id-get-create
        "s" #'org-roam-db-sync
        "u" #'org-roam-update-org-id-locations
        )
  :custom
  ;; „Éï„Ç°„Ç§„É´Âêç„ÇíID„Å´„Åô„Çã.
  (org-roam-capture-templates
   '(("d" "default" plain "%?"
      :target (file+head "%<%Y%m%d%H%M%S>.org"
                         "#+title: ${title}\n")
      :unnarrowed t)))
  (org-roam-extract-new-file-path "%<%Y%m%d%H%M%S>.org")
  (org-roam-dailies-directory "logs/daily/")
  (org-roam-dailies-capture-templates
   '(("d" "default" item "%?"
      :if-new (file+head "%<%Y-%m-%d>.org" "#+title: %<%Y-%m-%d>\n")
      :unnarrowed t)))
  ;;        :map org-mode-map
  ;;        ("C-M-i"    . completion-at-point)
  ;;        :map org-roam-dailies-map
  ;;        ("Y" . org-roam-dailies-capture-yesterday)
  ;;        ("T" . org-roam-dailies-capture-tomorrow))
  :bind-keymap
  ("C-c r d" . org-roam-dailies-map)
  :config
  (setq +org-roam-open-buffer-on-find-file nil)
  (require 'org-roam-dailies) ; Ensure the keymap is available
  (org-roam-db-autosync-mode))


(use-package! websocket
    :after org-roam)
(use-package! org-roam-ui
    :after org-roam ;; or :after org
;;         normally we'd recommend hooking orui after org-roam, but since org-roam does not have
;;         a hookable mode anymore, you're advised to pick something yourself
;;         if you don't care about startup time, use
    ;; :hook (after-init . org-roam-ui-mode)
    :config
    (setq org-roam-ui-sync-theme t
          org-roam-ui-follow t
          org-roam-ui-update-on-save t
          org-roam-ui-open-on-start t))

(use-package! org-roam-timestamps
   :after org-roam
   :config
   (org-roam-timestamps-mode))

;; ‰ªä„Å©„Åç„ÅÆ„Ç¢„Ç¶„Éà„É©„Ç§„Éä„ÉºÁöÑ„Å™Á∑ö„ÇíÂá∫„Åô.
;; Terminal Mode„Åß„ÅØ„Å§„Åã„Åà„Å™„ÅÑ„ÅÆ„Åß‰∏ÄÊó¶ÁÑ°ÂäπÂåñ„Åô„Çã.
;; (require 'org-bars)
;; (add-hook! 'org-mode-hook #'org-bars-mode)

;; twittering-mode
;; „Åì„ÅÆË®≠ÂÆö„Åå„Å™„ÅÑ„Å®Ë™çË®º„ÅåÂ§±Êïó„Åó„Åü.
;; twittering-oauth-get-access-token: Failed to retrieve a request token
(add-hook! 'twittering-mode-hook
  (setq twittering-allow-insecure-server-cert t))

(add-hook! writeroom-mode
  (setq +zen-text-scale 1))

;; Ë™≠Êõ∏„ÅÆ„Åü„ÇÅ„ÅÆ„Éû„Éº„Ç´„ÉºÔºà‰ªÆÔºâ
;; „ÅÇ„Å®„Åß„Å°„ÇÉ„Çì„Å®Ê§úË®é„Å®ÊúùÈÆÆ„Åó„Çà„ÅÜ.
;; (setq org-emphasis-alist
;;   '(("*" bold)
;;     ("/" italic)
;;     ("_" underline)
;;     ("=" (:background "red" :foreground "white")) ;; Êõ∏„ÅçÊâã„ÅÆ‰∏ªÂºµ
;;     ("~" (:background "blue" :foreground "white"))„ÄÄ;; Ê†πÊã†
;;     ("+" (:background "green" :foreground "black")))) ;; Ëá™ÂàÜ„ÅÆËÄÉ„Åà

;; org-clockÈñ¢ÈÄ£
(require 'org-toggl)
(setq toggl-auth-token "4b707d3e5bc71cc5f0010ac7ea76185d")
(setq org-toggl-inherit-toggl-properties nil)
(org-toggl-integration-mode)

(use-package! ox-hugo
  :after 'ox)

;; Á©∫ÁôΩ„Åå‰øùÂ≠òÊôÇ„Å´ÂâäÈô§„Åï„Çå„Çã„Å®bulletË°®Á§∫„Åå„Åä„Åã„Åó„Åè„Å™„Çã.
;; „Å™„Åäwl-bulter„ÅØdoom emacs„ÅÆ„Éá„Éï„Ç©„É´„Éà„ÅßÁµÑ„ÅøËæº„Åæ„Çå„Å¶„ÅÑ„Çã.
(add-hook! 'org-mode-hook (ws-butler-mode -1))

;; org-roam„ÅÆcompletion-at-point„ÅåÂãï‰Ωú„Åó„Å™„ÅÑ„ÅÆ„ÅØ„Åì„ÅÑ„Å§„Åã„Å™...
;; (add-hook! 'org-mode-hook (company-mode -1))
;; company„ÅØ„Å™„Å´„Åí„Å´‰Ωø„ÅÑ„Åù„ÅÜ„Å†„Åã„Çâ„Å™ÔºåTAB„Åß„ÅÆ„ÅøË£úÂÆåÁô∫Âãï„Åï„Åõ„Çã„Åã.
(setq company-idle-delay nil)
(global-set-key (kbd "TAB") #'company-indent-or-complete-common)

(use-package! deft
  :after org
  :bind
  ("C-c r j" . deft)
  :config
  (setq deft-default-extension "org")
  (setq deft-directory org-directory)
  (setq deft-recursive t)
  (setq deft-strip-summary-regexp ":PROPERTIES:\n\\(.+\n\\)+:END:\n")
  (setq deft-use-filename-as-title nil)
  ;; (setq deft-use-filter-string-for-filename t)
  ;; (setq deft-org-mode-title-prefix t)
  ;;
  ;; deft„Åßorg-roam„ÅÆtitle„Çíparse„Åô„Çã„Åü„ÇÅ„ÅÆworkaround
  ;; see: https://github.com/jrblevin/deft/issues/75
  (advice-add 'deft-parse-title :override
    (lambda (file contents)
      (if deft-use-filename-as-title
          (deft-base-filename file)
        (let* ((case-fold-search 't)
               (begin (string-match "title: " contents))
               (end-of-begin (match-end 0))
               (end (string-match "\n" contents begin)))
          (if begin
              (substring contents end-of-begin end)
            (format "%s" file))))))
  )

;; elfeed
(global-set-key (kbd "C-x w") 'elfeed)

(use-package! elfeed
  :config
  (setq elfeed-feeds
        '("https://futurismo.biz")))
